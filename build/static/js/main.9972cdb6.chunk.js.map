{"version":3,"sources":["common/Logo/index.js","common/Footer/index.js","components/LeaderBoardComponent/ItemHeader.js","components/LeaderBoardComponent/IndividualItem.js","pages/Leaderboard/index.js","serviceWorker.js","index.js"],"names":["Logo","href","className","Footer","id","action","type","placeholder","ItemHeader","TableItem","name","rank","votes","voteWeight","proposalsVoted","src","class","itemArray","Array","fill","Homepage","map","item","index","IndividualItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4RAGe,SAASA,IACtB,OACE,uBAAGC,KAAK,uBAAuBC,UAAU,QAAzC,Y,MCFW,SAASC,IACtB,OACE,yBAAKD,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,8BACb,wBAAIA,UAAU,WAAd,mBACA,8KAGJ,yBAAKA,UAAU,YACb,yBAAKA,UAAU,qDACb,wBAAIA,UAAU,WAAd,eACA,wBAAIA,UAAU,cACZ,4BAAI,uBAAGD,KAAK,wBAAR,SACJ,4BAAI,uBAAGA,KAAK,6GAAR,UACJ,4BAAI,uBAAGA,KAAK,aAAR,aACJ,4BAAI,uBAAGA,KAAK,+BAAR,cAIV,yBAAKC,UAAU,WAAWE,GAAG,WAC3B,yBAAKF,UAAU,8BACb,wBAAIA,UAAU,WAAd,cACA,wBAAIA,UAAU,cACZ,4BAAI,uBAAGD,KAAK,8BAAR,YACJ,4BAAI,uBAAGA,KAAK,yBAAR,aACJ,4BAAI,uBAAGA,KAAK,gCAAR,YACJ,4BAAI,uBAAGA,KAAK,sCAAR,cAIV,yBAAKC,UAAU,YACb,yBAAKA,UAAU,qDACb,wBAAIA,UAAU,WAAd,aACA,0BAAMG,OAAO,KACX,yBAAKH,UAAU,cACb,2BAAOI,KAAK,OAAOJ,UAAU,eAAeK,YAAY,qBACxD,4BAAQL,UAAU,qBAAlB,c,SCrBDM,EAjBI,kBACjB,yBAAKN,UAAU,gBACb,yBAAKA,UAAU,sBACb,wCAEF,yBAAKA,UAAU,gCACb,yCAEF,yBAAKA,UAAU,oBACb,+CAEF,yBAAKA,UAAU,gCACb,qDCaSO,EAzBG,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,WAAYC,EAAjC,EAAiCA,eAAjC,OAChB,uBAAGZ,UAAU,yDACX,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,wDACb,yBAAKA,UAAU,yCACb,2BAAOA,UAAU,oCACdS,IAGL,yBAAKT,UAAU,8CACb,yBACEE,GAAG,iDACHF,UAAU,+BACVa,IAAI,oHACN,yBAAKC,MAAM,sHAEb,8BAAON,KAGX,yBAAKR,UAAU,gCAAgCU,GAC/C,yBAAKV,UAAU,oBAAoBW,GACnC,yBAAKX,UAAU,oBAAoBY,KCjBjCG,G,MAAY,IAAIC,MAAM,KAAKC,KAAK,IAwCvBC,MAvCf,WACE,OACE,kBAAC,WAAD,KACE,yBAAKlB,UAAU,oBACb,kBAAC,EAAD,kBAEF,yBAAKA,UAAU,6BACb,6BAASA,UAAU,QACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,4EACb,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,uBAAd,mBAKR,6BAASc,MAAM,gBACb,yBAAKd,UAAU,aACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,4BACb,2DAEF,kBAAC,EAAD,MAEEe,EAAUI,KAAI,SAACC,EAAMC,GAAP,OACZ,kBAACC,EAAD,CAAgBd,KAAK,UAAUC,KAAMY,EAAQ,EAAGX,MAAO,KAAMC,WAAY,KAAMC,eAAgB,WAO3G,yBAAKZ,UAAU,UACb,kBAAC,EAAD,SC7BYuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9972cdb6.chunk.js","sourcesContent":["import React from 'react'\nimport './index.scss'\n\nexport default function Logo() {\n  return (\n    <a href=\"https://zoracles.com\" className=\"logo\">\n      Zoracles\n    </a>\n  )\n}\n","import React from 'react'\nimport './index.scss'\n\nexport default function Footer() {\n  return (\n    <div className=\"container\">\n      <div className=\"row mb60\">\n        <div className=\"col-md-3\">\n          <div className=\"probootstrap-footer-widget\">\n            <h4 className=\"heading\">About Zoracles.</h4>\n            <p>Zoracles partners with DeFi projects using an open oracle standard and zero-knowledge proofs to provide confidential data to smart contracts.</p>\n          </div> \n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"probootstrap-footer-widget probootstrap-link-wrap\">\n            <h4 className=\"heading\">Quick Links</h4>\n            <ul className=\"stack-link\">\n              <li><a href=\"https://zoracles.com\">Home</a></li>\n              <li><a href=\"https://www.newsbtc.com/press-releases/zoracles-transforming-defi-oracle-data-with-zero-knowledge-proofs/\">Press</a></li>\n              <li><a href=\"#features\">Features</a></li>\n              <li><a href=\"https://github.com/zoracles\">Github</a></li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"col-md-3\" id=\"contact\">\n          <div className=\"probootstrap-footer-widget\">\n            <h4 className=\"heading\">More Links</h4>\n            <ul className=\"stack-link\">\n              <li><a href=\"https://discord.gg/9vn7UdY\">Discord</a></li>\n              <li><a href=\"https://t.me/zoracles\">Telegram</a></li>\n              <li><a href=\"https://twitter.com/z0racles\">Twitter</a></li>\n              <li><a href=\"https://www.reddit.com/r/Zoracles/\">Reddit</a></li>\n            </ul>\n          </div> \n        </div>\n        <div className=\"col-md-3\">\n          <div className=\"probootstrap-footer-widget probootstrap-link-wrap\">\n            <h4 className=\"heading\">Subscribe</h4>\n            <form action=\"#\">\n              <div className=\"form-field\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Enter your email\" />\n                <button className=\"btn btn-subscribe\">Send</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport './index.scss'\n\nconst ItemHeader = () => (\n  <div className=\"item-wrapper\">      \n    <div className=\"col-xs-10 col-sm-6\">\n      <label>rank</label>\n    </div>\n    <div className=\"col-2 text-right mobile-hide\">\n      <label>Votes</label>\n    </div>\n    <div className=\"col-2 text-right\">\n      <label>Vote Weight</label>\n    </div>\n    <div className=\"col-2 text-right mobile-hide\">\n      <label>Proposals Voted</label>\n    </div>\n  </div>\n)\n\nexport default ItemHeader","import React from 'react'\nimport './index.scss'\n\nconst TableItem = ({name, rank, votes, voteWeight, proposalsVoted}) => (\n  <a className=\"d-flex align-items-center flex-wrap delegatee-summary\">\n    <div className=\"col-xs-10 col-sm-6\">\n      <div className=\"delegatee-summary__details d-flex align-items-center\">\n        <div className=\"delegatee-summary__details__rank-view\">\n          <label className=\"delegatee-summary__details__rank\">\n            {rank}\n          </label>\n        </div>\n        <div className=\"gov-profile-image gov-profile-image--small\">\n          <img \n            id=\"img-0x9aa835bc7b8ce13b9b0c9764a52fbf71ac62ccf1\" \n            className=\"gov-profile-image__raw-image\" \n            src=\"https://profile.compound.finance/1cANZxX2uHM_gbyIKhhmJnQtsBv59IS2N/F4y7ebcI7OXCNuEfBfWkMW0eWefxQKIjxKtf9q97r2w=\" />\n          <div class=\"gov-profile-image__proposer-icon gov-profile-image__proposer-icon--small gov-profile-image__proposer-icon--light\" />\n        </div>\n        <span>{name}</span>\n      </div>\n    </div>\n    <div className=\"col-2 text-right mobile-hide\">{votes}</div>\n    <div className=\"col-2 text-right\">{voteWeight}</div>\n    <div className=\"col-2 text-right\">{proposalsVoted}</div>\n  </a>\n)\n\nexport default TableItem","import React, { Fragment } from 'react'\nimport Logo from 'common/Logo'\nimport Footer from 'common/Footer'\nimport ItemHeader from 'components/LeaderBoardComponent/ItemHeader'\nimport IndividualItem from 'components/LeaderBoardComponent/IndividualItem'\nimport './index.scss'\n\nconst itemArray = new Array(100).fill(0)\nfunction Homepage() {\n  return (\n    <Fragment>\n      <div className=\"header container\">\n        <Logo>Zoracles</Logo>\n      </div>\n      <div className=\"w-100 main-container mb-5\">\n        <section className=\"hero\">\n          <div className=\"container\">\n            <div className=\"header-view d-flex flex-column justify-content-center align-items-center\">\n              <div className=\"header-view__header-line\">\n                <h2 className=\"header-view__header\">Leaderboard</h2>\n              </div>\n            </div>\n          </div>\n        </section>\n        <section class=\"leader-board\">\n          <div className=\"container\">\n            <div className=\"governance-panel\">\n              <div className=\"governance-panel__header\">\n                <h4>Addresses by Voting Weight</h4>\n              </div>\n              <ItemHeader />\n              {\n                itemArray.map((item, index) => \n                  <IndividualItem name=\"testing\" rank={index + 1} votes={2343} voteWeight={3.45} proposalsVoted={1} />\n                )\n              }\n            </div>\n          </div>\n        </section>\n      </div>\n      <div className=\"footer\">\n        <Footer />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Homepage\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'pages/Leaderboard';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}